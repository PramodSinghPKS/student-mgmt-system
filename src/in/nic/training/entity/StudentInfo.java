package in.nic.training.entity;
// Generated Jul 6, 2016 5:02:01 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.GenericGenerator;

/**
 * StudentInfo generated by hbm2java
 */
@Entity
@Table(name = "student_info", schema = "public")
public class StudentInfo implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String studentId;
	private String lastName;
	private String firstName;
	private char gender;
	private Date dob;
	private String address;
	private String state;
	private int pincode;
	private String FName;
	private Long FContact;
	private String email;
	private long contact;
	private Set<StudentSubjectMapping> studentSubjectMappings = new HashSet<>(0);
	private Set<StudentCourseMapping> studentCourseMappings = new HashSet<>(0);

	public StudentInfo() {
	}

	public StudentInfo(String studentId, String lastName, String firstName, char gender, Date dob, String address,
			String state, int pincode, String FName, long contact) {
		this.studentId = studentId;
		this.lastName = lastName;
		this.firstName = firstName;
		this.gender = gender;
		this.dob = dob;
		this.address = address;
		this.state = state;
		this.pincode = pincode;
		this.FName = FName;
		this.contact = contact;
	}

	public StudentInfo(String studentId, String lastName, String firstName, char gender, Date dob, String address,
			String state, int pincode, String FName, Long FContact, String email, long contact,
			Set<StudentSubjectMapping> studentSubjectMappings, Set<StudentCourseMapping> studentCourseMappings) {
		this.studentId = studentId;
		this.lastName = lastName;
		this.firstName = firstName;
		this.gender = gender;
		this.dob = dob;
		this.address = address;
		this.state = state;
		this.pincode = pincode;
		this.FName = FName;
		this.FContact = FContact;
		this.email = email;
		this.contact = contact;
		this.studentSubjectMappings = studentSubjectMappings;
		this.studentCourseMappings = studentCourseMappings;
	}

	@Id
	@GenericGenerator(name = "student_id_seq", strategy = "in.nic.training.util.StudentIdGenerator")
	@GeneratedValue(generator = "student_id_seq")
	@Column(name = "student_id", unique = true, nullable = false, length = 8)
	public String getStudentId() {
		return this.studentId;
	}

	public void setStudentId(String studentId) {
		this.studentId = studentId;
	}

	@Column(name = "last_name", nullable = false, length = 30)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "first_name", nullable = false, length = 30)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "gender", nullable = false, length = 1)
	public char getGender() {
		return this.gender;
	}

	public void setGender(char gender) {
		this.gender = gender;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dob", nullable = false, length = 13)
	public Date getDob() {
		return this.dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	@Column(name = "address", nullable = false)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "state", nullable = false, length = 20)
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}

	@Column(name = "pincode", nullable = false)
	public int getPincode() {
		return this.pincode;
	}

	public void setPincode(int pincode) {
		this.pincode = pincode;
	}

	@Column(name = "f_name", nullable = false, length = 30)
	public String getFName() {
		return this.FName;
	}

	public void setFName(String FName) {
		this.FName = FName;
	}

	@Column(name = "f_contact")
	public Long getFContact() {
		return this.FContact;
	}

	public void setFContact(Long FContact) {
		this.FContact = FContact;
	}

	@Column(name = "email")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "contact", nullable = false)
	public long getContact() {
		return this.contact;
	}

	public void setContact(long contact) {
		this.contact = contact;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "studentInfo", cascade = CascadeType.ALL)
	public Set<StudentSubjectMapping> getStudentSubjectMappings() {
		return this.studentSubjectMappings;
	}

	public void setStudentSubjectMappings(Set<StudentSubjectMapping> studentSubjectMappings) {
		this.studentSubjectMappings = studentSubjectMappings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "studentInfo", cascade = CascadeType.ALL)
	public Set<StudentCourseMapping> getStudentCourseMappings() {
		return this.studentCourseMappings;
	}

	public void setStudentCourseMappings(Set<StudentCourseMapping> studentCourseMappings) {
		this.studentCourseMappings = studentCourseMappings;
	}

}
